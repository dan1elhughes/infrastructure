---
- name: Load host variables
  include_vars: "sites/{{ ansible_hostname }}.yml"

- name: Create root web server directory
  file:
    path="/var/www"
    state=directory
    owner="www-data"
    group="www-data"
    mode=0755

- name: Create directory for deploy keys
  file:
    path="/var/www/.ssh"
    state=directory
    owner="www-data"
    group="www-data"
    mode=0700

- name: Copy Bitbucket deploy key
  copy:
    dest="/home/{{ user }}/.ssh/deploy.id_rsa"
    content="{{ bitbucket_deploy_key }}"
    owner="{{ user }}"
    group="{{ user }}"
    mode=0600

- name: Create SSH config file
  copy:
    dest="/home/{{ user }}/.ssh/config"
    content="IdentityFile ~/.ssh/deploy.id_rsa"
    owner="{{ user }}"
    group="{{ user }}"
    mode=0664

- name: Create deployment group
  group:
    name="deploy"
    state="present"

- name: Add users to deployment group
  user:
    name="{{ item }}"
    groups=deploy
    append=yes
  with_items:
    - 'www-data'
    - 'xes'

- name: Create src directory
  file:
    path="/src"
    state=directory
    owner="{{ user }}"
    group="deploy"
    mode=2775

- name: Fetch git repositories
  git:
    repo="{{ item.repo }}"
    version="{{ item.branch | default('master') }}"
    dest="/src/{{ item.url }}"
    accept_hostkey=yes
    bare=yes
  with_items: "{{ sites }}"
  when: item.repo is defined
  become_user: "{{ user }}"

- name: Fix permissions on src
  file:
    path="/src/{{ item.url }}"
    state="directory"
    mode=0775
  with_items: "{{ sites }}"

- name: Copy deploy script
  copy:
    src="deploy.sh"
    dest="/src/deploy.sh"
    owner="{{ user }}"
    group="deploy"
    mode=0755

- name: Allow execution of deploy script for deploy group
  lineinfile:
    dest: "/etc/sudoers"
    state: present
    line: "%deploy ALL =(www-data) NOPASSWD: /src/deploy.sh"
    validate: 'visudo -cf %s'

- name: Configure deployment hooks
  template:
    src="post-receive.sh"
    dest="/src/{{ item.url }}/hooks/post-receive"
    owner="{{ user }}"
    group="deploy"
    mode=0755
  with_items: "{{ sites }}"
